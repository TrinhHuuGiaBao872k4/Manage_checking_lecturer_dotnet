@page "/role"
@layout ManagerMasterPage

<div class="container mt-4">
    <!-- Title -->
    <h3 class="fw-bold mb-3 fs-3">Quản lý role</h3>

    <!-- Add button -->
    <button class="btn btn-dark mb-3 fw-bold py-2 px-4" @onclick="() => IsModalOpen = true">Add Role</button>

    <!-- Table -->
    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th scope="col">STT</th>
                    <th scope="col">Role</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var role in PagedRoles.Select((r, i) => new
                {
                    Index = (CurrentPage - 1) * PageSize + i + 1,
                    Role = r
                }))
                {
                    <tr>
                        <td>@role.Index</td>
                        <td>@role.Role</td>
                        <td>
                            <button class="btn btn-dark py-2 px-4" @onclick="() => DeleteRole(role.Role)">Delete</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-end">
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <button class="page-link" @onclick="() => ChangePage(CurrentPage - 1)">
                    <span aria-hidden="true">&laquo;</span>
                </button>
            </li>

            @for (int i = 1; i <= TotalPages; i++)
            {
                <li class="page-item @(CurrentPage == i ? "active" : "")">
                    <button class="page-link" @onclick="() => ChangePage(i)">@i</button>
                </li>
            }

            <li class="page-item @(CurrentPage == TotalPages ? "disabled" : "")">
                <button class="page-link" @onclick="() => ChangePage(CurrentPage + 1)">
                    <span aria-hidden="true">&raquo;</span>
                </button>
            </li>
        </ul>
    </nav>

</div>

<!-- Popup Component -->
<PopupAddRole IsOpen="IsModalOpen" IsOpenChanged="OnModalChanged" OnSave="AddRole" />

@code {
    private bool IsModalOpen { get; set; }
    private List<string> Roles = new() { "ADMIN", "MANAGER", "EMPLOYEE", "GIANGVIEN" };

    // Pagination properties
    private int CurrentPage { get; set; } = 1;
    private int PageSize { get; set; } = 10; // số item mỗi trang
    private int TotalPages => (int)Math.Ceiling((double)Roles.Count / PageSize);

    private IEnumerable<string> PagedRoles => Roles
    .Skip((CurrentPage - 1) * PageSize)
    .Take(PageSize);

    private void AddRole(string roleName)
    {
        if (!string.IsNullOrWhiteSpace(roleName) && !Roles.Contains(roleName))
        {
            Roles.Add(roleName);
            UpdatePagination();
        }
    }

    private void DeleteRole(string roleName)
    {
        Roles.Remove(roleName);
        UpdatePagination();
    }

    private void OnModalChanged(bool isOpen)
    {
        IsModalOpen = isOpen;
    }

    private void ChangePage(int page)
    {
        if (page >= 1 && page <= TotalPages)
        {
            CurrentPage = page;
        }
    }

    private void UpdatePagination()
    {
        if (CurrentPage > TotalPages)
        {
            CurrentPage = TotalPages > 0 ? TotalPages : 1;
        }
        StateHasChanged();
    }
}
