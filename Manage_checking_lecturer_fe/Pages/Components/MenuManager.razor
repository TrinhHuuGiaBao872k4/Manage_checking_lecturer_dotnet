@using Microsoft.AspNetCore.Components.Routing
@inject NavigationManager Navigation
@implements IDisposable

<div class="d-flex flex-column flex-shrink-0 p-1 text-white "
    style="width: 350px; height: 100vh; background-color:#001529">
    <ul class="nav nav-pills flex-column mb-auto">
        <!-- Dashboard -->
        <li class="nav-item mb-1 ms-2">
            <NavLink href="/checking-intern" class="nav-linkm d-flex align-items-center" activeClass="active">
                <i class="bi bi-pie-chart me-2"></i>
                Dashboard
            </NavLink>
        </li>

        <!-- Manager (collapsible) -->
        <li class="mb-1">
            <a class="nav-linkm d-flex align-items-center ms-2 @(IsManagerChildActive() ? "manager-active" : "")"
               data-bs-toggle="collapse" href="#managerSubMenu" role="button"
               aria-expanded="@(IsManagerChildActive().ToString().ToLower())" aria-controls="managerSubMenu">
                <i class="bi bi-envelope me-2"></i>
                Manager
                <i class="bi bi-chevron-down ms-auto arrow-icon"></i>
            </a>

            <div class="collapse @(IsManagerChildActive() ? "show" : "")" id="managerSubMenu"
                style="background-color: #000;">
                <ul class="nav flex-column pt-3 pb-3">
                    <li>
                        <NavLink href="/role" class="nav-linkm ps-5" activeClass="active">Role</NavLink>
                    </li>
                    <li>
                        <NavLink href="/employee" class="nav-linkm ps-5" activeClass="active">Employee</NavLink>
                    </li>
                    <li>
                        <NavLink href="/project" class="nav-linkm ps-5" activeClass="active">Project</NavLink>
                    </li>
                    <li>
                        <NavLink href="/checking" class="nav-linkm ps-5" activeClass="active">Checking</NavLink>
                    </li>
                    <li>
                        <NavLink href="/department" class="nav-linkm ps-5" activeClass="active">Department</NavLink>
                    </li>
                    <li>
                        <NavLink href="/meetings" class="nav-linkm ps-5" activeClass="active">Meetings</NavLink>
                    </li>
                </ul>
            </div>
        </li>

        <!-- Schedule Lecture -->
        <li class="nav-item mt-2 ps-2">
            <NavLink href="/schedule-management" class="nav-linkm d-flex align-items-center" activeClass="active">
                <i class="bi bi-pie-chart me-2"></i>
                Schedule Lecture
            </NavLink>
        </li>
    </ul>
</div>

<style>
    .nav-linkm {
        color: #8b8f95;
        border-radius: 8px;
        padding: 8px 12px;
        transition: all 0.2s ease-in-out;
        text-decoration: none;
    }

    .nav-linkm:hover {
        color: #fff;
    }

    .nav-linkm.active {
        background-color: #0d6efd !important;
        color: #fff !important;
        font-weight: 500;
        border-radius: 12px;
    }

    #managerSubMenu ul {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    #managerSubMenu .nav-linkm {
        display: block;
        width: 100%;
        padding: 8px 12px;
        border-radius: 8px;
    }

    #managerSubMenu .nav-linkm.active {
        background-color: #0d6efd !important;
        color: #fff !important;
        font-weight: 500;
        border-radius: 8px;
        margin: 0;
    }

    .arrow-icon {
        transition: transform 0.3s ease;
    }

    a[aria-expanded="true"] .arrow-icon {
        transform: rotate(180deg);
    }
    .nav-linkm.manager-active {
        color: #fff !important;
        font-weight: 500;
        background-color: transparent !important;
    }
</style>

@code {
    private readonly string[] managerLinks = new[]
    {
        "role", "employee", "project", "checking", "department", "meetings"
    };

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    private bool IsManagerChildActive()
    {
        var relative = Navigation.ToBaseRelativePath(Navigation.Uri).Trim('/').ToLowerInvariant();
        if (string.IsNullOrEmpty(relative))
            return false;
        var firstSegment = relative.Split('/')[0];
        return managerLinks.Contains(firstSegment);
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}
